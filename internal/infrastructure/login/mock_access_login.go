// Code generated by MockGen. DO NOT EDIT.
// Source: internal\infrastructure\login\access_login.go

// Package login is a generated GoMock package.
package login

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfirmLogin is a mock of ConfirmLogin interface.
type MockConfirmLogin struct {
	ctrl     *gomock.Controller
	recorder *MockConfirmLoginMockRecorder
}

// MockConfirmLoginMockRecorder is the mock recorder for MockConfirmLogin.
type MockConfirmLoginMockRecorder struct {
	mock *MockConfirmLogin
}

// NewMockConfirmLogin creates a new mock instance.
func NewMockConfirmLogin(ctrl *gomock.Controller) *MockConfirmLogin {
	mock := &MockConfirmLogin{ctrl: ctrl}
	mock.recorder = &MockConfirmLoginMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfirmLogin) EXPECT() *MockConfirmLoginMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockConfirmLogin) Get(arg0 context.Context, arg1 RequestUser) (ResponseUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(ResponseUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockConfirmLoginMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConfirmLogin)(nil).Get), arg0, arg1)
}
