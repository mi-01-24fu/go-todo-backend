// Code generated by MockGen. DO NOT EDIT.
// Source: internal\service\verifySignup\verify_sign_up.go

// Package verifySignup is a generated GoMock package.
package verifySignup

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	verifySignup "github.com/mi-01-24fu/go-todo-backend/internal/infrastructure/verifySignup"
)

// MockPreparationSingUp is a mock of PreparationSingUp interface.
type MockPreparationSingUp struct {
	ctrl     *gomock.Controller
	recorder *MockPreparationSingUpMockRecorder
}

// MockPreparationSingUpMockRecorder is the mock recorder for MockPreparationSingUp.
type MockPreparationSingUpMockRecorder struct {
	mock *MockPreparationSingUp
}

// NewMockPreparationSingUp creates a new mock instance.
func NewMockPreparationSingUp(ctrl *gomock.Controller) *MockPreparationSingUp {
	mock := &MockPreparationSingUp{ctrl: ctrl}
	mock.recorder = &MockPreparationSingUpMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPreparationSingUp) EXPECT() *MockPreparationSingUpMockRecorder {
	return m.recorder
}

// VerifySignUp mocks base method.
func (m *MockPreparationSingUp) VerifySignUp(arg0 context.Context, arg1 verifySignup.VerifySignUpRequest) (verifySignup.VerifySignUpResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifySignUp", arg0, arg1)
	ret0, _ := ret[0].(verifySignup.VerifySignUpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifySignUp indicates an expected call of VerifySignUp.
func (mr *MockPreparationSingUpMockRecorder) VerifySignUp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifySignUp", reflect.TypeOf((*MockPreparationSingUp)(nil).VerifySignUp), arg0, arg1)
}
