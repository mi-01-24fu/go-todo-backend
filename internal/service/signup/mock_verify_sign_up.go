// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/signup/verify_sign_up.go

// Package signup is a generated GoMock package.
package signup

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	signup "github.com/mi-01-24fu/go-todo-backend/internal/infrastructure/signup"
)

// MockSignUp is a mock of SignUp interface.
type MockSignUp struct {
	ctrl     *gomock.Controller
	recorder *MockSignUpMockRecorder
}

// MockSignUpMockRecorder is the mock recorder for MockSignUp.
type MockSignUpMockRecorder struct {
	mock *MockSignUp
}

// NewMockSignUp creates a new mock instance.
func NewMockSignUp(ctrl *gomock.Controller) *MockSignUp {
	mock := &MockSignUp{ctrl: ctrl}
	mock.recorder = &MockSignUpMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSignUp) EXPECT() *MockSignUpMockRecorder {
	return m.recorder
}

// VerifySignUp mocks base method.
func (m *MockSignUp) VerifySignUp(arg0 signup.RegistrationRequest) (signup.VerifySignUpResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifySignUp", arg0)
	ret0, _ := ret[0].(signup.VerifySignUpResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifySignUp indicates an expected call of VerifySignUp.
func (mr *MockSignUpMockRecorder) VerifySignUp(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifySignUp", reflect.TypeOf((*MockSignUp)(nil).VerifySignUp), arg0)
}
